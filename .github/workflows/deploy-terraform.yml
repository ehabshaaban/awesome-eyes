name: Terraform Deploy

env:
  passwd: ${{ secrets.GRAFANA_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

on:
  push:
    branches:
      - dev

  pull_request:
    branches:
      - main


jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform init
        uses: ./.github/actions/terraform-init

      - name: Terraform format
        run: terraform fmt -check

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform plan
        run: terraform plan -no-color -var "grafana_admin_password=env.passwd"
        # continue-on-error: true

  terraform-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform init
        uses: ./.github/actions/terraform-init
      
      - name: Terraform eks test
        run: cd test && go test -v -timeout 99999s infra_test.go
        continue-on-error: true

      # - name: Terraform eks deploy
      #   run: cd eks/ && terraform apply --auto-approve

      # - name: Terraform helm releases test
      #   run: cd test && go test -v deployment_test.go
      #   continue-on-error: true

      # - name: Terraform helm releases deploy
      #   run: terraform apply -var "grafana_admin_password=env.passwd" --auto-approve
      
      # - name: Terraform helm releases destroy
      #   run: terraform destroy --auto-approve

      # - name: Terraform eks destroy
      #   run: cd eks/ && terraform destroy --auto-approve