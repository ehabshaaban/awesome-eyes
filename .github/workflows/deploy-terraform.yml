# jobs:
# terraform-validate: fmt, validate, plan
# terraform-deploy: test, deploy, destroy

name: Terraform Deploy

env:
  passwd: ${{ secrets.GRAFANA_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

on:
  push: {}

  pull_request:
    branches:
      - main


jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform init
        uses: ./.github/actions/terraform-init

      - name: Terraform format
        run: terraform fmt -check

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform plan
        run: terraform plan -no-color -var "grafana_admin_password=env.passwd"

  terraform-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: install-aws-iam-authenticator
        run: brew install aws-iam-authenticator

      - id: install-aws-cli
        run: brew install awscli

      - id: install-kubernetes-cli
        run: brew install kubernetes-cli

      - id: install-wget
        run: brew install wget

      - name: Terraform init
        uses: ./.github/actions/terraform-init
      
      - name: Terraform test
        run: cd test && go test -v -timeout 1500s infra_test.go
        # continue-on-error: true

      # - name: Terraform deploy
      #   run: terraform apply --auto-approve

      # - name: Terraform destroy
      #   run: terraform destroy --auto-approve